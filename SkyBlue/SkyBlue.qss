/*****************************************************************************
 *
 * ABOUT
 * =====
 *
 * FreeCAD stylesheet designed by Glasson Design Studio for use with
 * monitors running at 4K.
 *
 * This stylesheet is derived from the Light Blue stylesheet that is
 * shipped with FreeCAD but it has been modified as required to suit a
 * 4K display.
 *
 * LICENSE
 * =======
 *
 * SkyBlue stylesheet - changes Copyright (c) 2022 Glasson Design Studio
 *
 * Light Blue stylehseet - Copyright (c) 2019 Pablo Gil FernÃ¡ndez
 *
 * This work is licensed under the Creative Commons
 * Attribution-ShareAlike 4.0 International License.
 *
 * To view a copy of this license, visit
 * http://creativecommons.org/licenses/by-sa/4.0/.
 *
 * INSTALLATION
 * ============
 *
 * 1) Place the .qss files and /images/ folder in the path that fits your OS:
 *    OSX = /Users/[YOUR_USER_NAME]/Library/Preferences/FreeCAD/Gui/Stylesheets/
 *    WINDOWS = C:/[INSTALLATION_PATH]/FreeCAD/data/Gui/Stylesheets/
 *    LINUX = /home/[YOUR_USER_NAME]/.FreeCAD/Gui/Stylesheets/
 *
 *****************************************************************************
 */

/*****************************************************************************
 *
 * Reset elements
 *
 * Resetting everything helps to unify styles across different
 * operating systems
 *
 *****************************************************************************
 */
* {
    padding: 0em;
    margin: 0em;
    border: 0em;
    border-style: none;
    border-image: none;
    outline: 0;

    /*
     * Default color for labels and different text elements that
     * usually use dark colors
     */
    color: #505050;

    /*
     * FIXME:
     *
     * Hard coded for now, but ideally this should be an editable preference
     * so that stylesheet can be used with other resolutions as well.
     */
    font-size: 25px;
}

/*****************************************************************************
 *
 * Specific reset for elements inside QToolBar
 *
 *****************************************************************************
 */
QToolBar * {
    margin: 0em;
    padding: 0em;
}


/*****************************************************************************
 *
 * Main window
 *
 *****************************************************************************
 */
QMainWindow,
QDialog,
QDockWidget,
QToolBar  {
    background-color: #f5f5f5; /* main background color */
}

QMdiArea {
    background-image: url(qss:images_dark-light/background_freecad_dark.svg);
    background-position: center center;
    background-repeat: no-repeat;
}


/*****************************************************************************
 *
 * Sub windows
 *
 *****************************************************************************
 */
QMdiSubWindow {
    border: 0.1em solid #828282;
    margin-top: 1em;
    margin-left: 1em;
    margin-right: 1em;
    margin-bottom:1em;

}


/*****************************************************************************
 *
 * MENUS
 *
 *****************************************************************************
 */
QMenuBar,
QMenuBar::item {
    color: black;
    background-color: #f5f5f5; /* main background color */
}

QMenu,
QMenu::item {
    color: black;
    background-color: #f5f5f5; /* main background color */
    text-decoration: none;
}

QMenuBar::item:selected,
QMenuBar::item:pressed,
QMenu::item:selected,
QMenu::item:pressed {
    color: white;
    background-color: #5e90fa;
}

QMenu::right-arrow {
    width: 1em;
    height: 1em;
    image:url(qss:images_dark-light/right_arrow_dark.svg);
    margin-right: 1em;
}

QMenu::right-arrow:selected {
    image:url(qss:images_dark-light/right_arrow_lighter.svg);
}

QMenu::item {
    padding: 0.1em 1em 0.1em 1em; /* make room for icon at left */
    border: 0.1em solid transparent; /* reserve space for selection border */
}

QMenu::icon {
    margin-left: 0.1em;
}

QMenu::separator {
    height: 0.1em;
    background-color: rgba(0,0,0,30);
    margin: 0.3em 0.2em;

}

QMenu::indicator:non-exclusive:checked {
    color: white;
}

/* Fix for elements inside a drop-down menu */
QMenu QRadioButton,
QMenu QCheckBox,
QMenu QPushButton,
QMenu QToolButton {
    color: black; /* same as regular QRadioButton and QCheckBox */
    min-height: 1em;
}

QMenu QRadioButton:hover,
QMenu QCheckBox:hover,
QMenu QPushButton:hover,
QMenu QToolButton:hover,
QMenu QPushButton:pressed,
QMenu QToolButton:pressed,
QMenu QPushButton:selected,
QMenu QToolButton:selected {
    color: white;
    background-color: #5e90fa; /* same as QMenu::item:selected and QMenu::item:pressed */
}

QMenu QRadioButton:disabled,
QMenu QCheckBox:disabled {
    color: #6e6e6e;
}

QMenu QRadioButton::indicator:disabled,
QMenu QCheckBox::indicator:disabled {
    color: #6e6e6e;
    background-color: transparent;
    border: 0.1em solid #6e6e6e;
}


/*****************************************************************************
 *
 * Tool bar
 *
 *****************************************************************************
 */
QToolBar {
    border: none;
    padding: 0.05em;
}

QToolBar::handle:top,
QToolBar::handle:bottom,
QToolBar::handle:horizontal {
    background-image: url(qss:images_dark-light/Hmovetoolbar_dark.svg);
    background-position: top right;
    background-repeat: repeat-y;
    width: 0.2em;
    margin: 0.2em 0.1em;

}

QToolBar::handle:left,
QToolBar::handle:right,
QToolBar::handle:vertical {
    background-image: url(qss:images_dark-light/Vmovetoolbar_dark.svg);
    background-position: left bottom;
    background-repeat: repeat-x;
    height: 0.2em;
    margin: 0.1em 0.2em;

}

QToolBar::separator:top,
QToolBar::separator:bottom,
QToolBar::separator:horizontal {
    background-color: rgba(0,0,0,30);
    width: 0.1em;
    margin: 0.3em 0.2em;

}

QToolBar::separator:left,
QToolBar::separator:right,
QToolBar::separator:vertical {
    height: 0.1em;
    margin: 0.4em 0.6em;
    background-color: rgba(0,0,0,30);
}


/*****************************************************************************
 *
 * Group box
 *
 *****************************************************************************
 */
QGroupBox {
    color: rgba(0,0,0,120);
    border:0.1em solid rgba(0, 0, 0, 20); /* lighter than its own border-color */;
    border-radius: 0.3em;
    margin-top: 0.75em;
    padding: 0.6em;
    background-color: rgba(255, 255, 255, 15);
}

QGroupBox:title {
    top: -0.8em;
    left: 0.12em;
}

/*****************************************************************************
 *
 * Tooltip
 *
 *****************************************************************************
 */
QToolTip {
    color: white;
    background-color: #828282;
    /*opacity: 90%; doesn't correctly work */
    padding: 0.4em;
    border-radius: 0.3em; /* has no effect */
}


/*****************************************************************************
 *
 * Dock widget
 *
 *****************************************************************************
 */
QDockWidget {
    color: rgba(0,0,0,120);
    titlebar-close-icon: url(qss:images_dark-light/close_dark.svg);
    titlebar-normal-icon: url(qss:images_dark-light/undock_dark.svg);
}

QDockWidget::title {
    text-align: center;
    background-color: rgba(0,0,0,10);
    border: 0.4em solid #f5f5f5; /* fix to simulate margin between this :title and tabs */ /* same as main background color */
    border-radius: 0.6em; /* bigger than normal due to previous border fix */
    padding: 0.4em 0em; /* also needed because of previous border fix */
}

QDockWidget::close-button,
QDockWidget::float-button {
    border: none;
    background: transparent;
    border-radius: 0.3em;
    subcontrol-origin: padding;
    subcontrol-position: right center;
}

QDockWidget::close-button {
    right: 0.4em;
}

QDockWidget::float-button {
    right: 0.22em;
}

QDockWidget::close-button:hover,
QDockWidget::float-button:hover {
    background-color: rgba(0,0,0,15);
}

QDockWidget::close-button:pressed,
QDockWidget::float-button:pressed {
    background-color: rgba(0,0,0,30);
}

/* fix for Python Console (probably there is a smarter way to arrive to it) */
QDockWidget > QFrame {
    background-color: #f0f0f0;
    border: 0.1em solid #c3c3c3;
}


/*****************************************************************************
 *
 * Progress bar
 *
 *****************************************************************************
 */
QProgressBar,
QProgressBar:horizontal {
    color: white;
    background-color: rgba(0,0,0,10);
    text-align: center;
    border: 0.1em solid rgba(0,0,0,80);
    padding: 0.1em;
    border-radius: 0.3em;
}
QProgressBar::chunk,
QProgressBar::chunk:horizontal {
    background-color: qlineargradient(spread:pad, x1:1, y1:0.545, x2:1, y2:0, stop:0 #3874f2, stop:1 #5e90fa);
    border-radius: 0.3em;
}


/*****************************************************************************
 *
 * Scroll
 *
 *****************************************************************************
 */
QAbstractScrollArea {
    border-radius: 0.2em;
    background-color: transparent;
}

QAbstractScrollArea::corner {
    border: none;
    background-color: transparent;
}

QScrollBar:horizontal {
    background-color: transparent;
    height: 0.15em;
    margin: 0em;
}

QScrollBar::handle:vertical,
QScrollBar::handle:horizontal {
    background-color: rgba(0,0,0,80);
}

QScrollBar::handle:vertical:hover,
QScrollBar::handle:horizontal:hover {
    background-color: rgba(0,0,0,100);
}

QScrollBar::handle:horizontal {
    min-width: 0.5em;
    border-radius: 0.3em;
    margin: 0.4em 0.15em;
}

QScrollBar::sub-line:horizontal {
    margin: 0.1em 0.3em 0em 0.3em; /* 1em to correctly fit the 10em width image */
    border-image: url(qss:images_dark-light/left_arrow_dark.svg);
    width: 0.6em;
    height: 0.10em;
    subcontrol-position: left;
    subcontrol-origin: margin;
}

QScrollBar::add-line:horizontal {
    margin: 0.1em 0.3em 0em 0.3em; /* 1em to correctly fit the 10em width image */
    border-image: url(qss:images_dark-light/right_arrow_dark.svg);
    width: 0.6em;
    height: 0.10em;
    subcontrol-position: right;
    subcontrol-origin: margin;
}

QScrollBar::sub-line:horizontal:hover,
QScrollBar::sub-line:horizontal:on {
    border-image: url(qss:images_dark-light/left_arrow_darker.svg);
}

QScrollBar::add-line:horizontal:hover,
QScrollBar::add-line:horizontal:on {
    border-image: url(qss:images_dark-light/right_arrow_darker.svg);
}

QScrollBar::up-arrow:horizontal,
QScrollBar::down-arrow:horizontal {
    background-color: none;
}

QScrollBar::add-page:horizontal,
QScrollBar::sub-page:horizontal {
    background-color: transparent;
}

QScrollBar:vertical {
    background-color: transparent;
    width: 0.15em;
    margin: 0em;
}

QScrollBar::handle:vertical {
    min-height: 5em;
    border-radius: 3em;
    margin: 15em 4em;
}

QScrollBar::sub-line:vertical {
    margin: 0.3em 0em 0.3em 0.1em; /* 1em to correctly fit the 10em width image */
    border-image: url(qss:images_dark-light/up_arrow_dark.svg);
    height: 0.6em;
    width: 0.10em;
    subcontrol-position: top;
    subcontrol-origin: margin;
}

QScrollBar::add-line:vertical {
    margin: 0.3em 0em 0.3em 1em; /* 1em to correctly fit the 10em width image */
    border-image: url(qss:images_dark-light/down_arrow_dark.svg);
    height: 0.6em;
    width: 0.10em;
    subcontrol-position: bottom;
    subcontrol-origin: margin;
}

QScrollBar::sub-line:vertical:hover,
QScrollBar::sub-line:vertical:on {
    border-image: url(qss:images_dark-light/up_arrow_darker.svg);
}

QScrollBar::add-line:vertical:hover,
QScrollBar::add-line:vertical:on {
    border-image: url(qss:images_dark-light/down_arrow_darker.svg);
}

QScrollBar::up-arrow:vertical,
QScrollBar::down-arrow:vertical {
    background-color: none;
}

QScrollBar::add-page:vertical,
QScrollBar::sub-page:vertical {
    background-color: transparent;
}


/*****************************************************************************
 *
 * Tab bar
 *
 *****************************************************************************
 */
QTabWidget::pane {
    background-color: transparent; /* temporal (transparent background) */ /* tab content background color */
    position: absolute;
}

QTabWidget::pane:top {
    top: -0.1em;
    border-top: 0.1em solid #d2d2d2;
}

QTabWidget::pane:bottom {
    bottom: -0.1em;
    border-bottom: 0.1em solid #d2d2d2;
}

QTabWidget::pane:left {
    right: -0.1em;
    border-right: 0.1em solid #d2d2d2;
}

QTabWidget::pane:right {
    left: -0.1em;
    border-left: 0.1em solid #d2d2d2;
}

QTabWidget::tab-bar:top,
QTabWidget::tab-bar:bottom {
    left: 0.10em;
}

QTabWidget::tab-bar:left,
QTabWidget::tab-bar:right {
    top: 0.10em;
}

QTabBar {
    qproperty-drawBase: 0; /* important */
    background-color: transparent;
}

/* Workaround for QTabBars created from docked QDockWidgets which don't draw the border if not set and reset as follows: */
QTabBar {
    border-top: 0.1em solid #d2d2d2;  /* set color for all QTabBars */
}
QDockWidget QTabBar {
    border-color: transparent; /* set color for all QTabBars but ones created from QDockWidget */
}
QDialog QTabBar {
    border-color: transparent; /* set color for QTabBars inside Preferences dialog */
}
/* end fix */

QTabBar::tab {
    background-color: transparent;
    border: 0.1em solid transparent;
    padding: 0.3em;
}

QTabBar::tab:top,
QTabBar::tab:bottom {
    border-top-width: 0.4em; /* same as selected tab colored border in order to center close-button */
    border-bottom-width: 0.4em; /* same as selected tab colored border in order to center close-button */
    min-width: 2em;
    margin-left: 0.2em;
    margin-right: 0.2em;
}

QTabBar::tab:left,
QTabBar::tab:right {
    border-left-width: 0.4em; /* same as selected tab colored border in order to center close-button */
    border-right-width: 0.4em; /* same as selected tab colored border in order to center close-button */
    min-height: 1em;
    margin-top: 0.2em;
    margin-bottom: 0.2em;
}

QTabBar::tab:selected {
    background-color: #f5f5f5; /* same as tab content background color */
    border-color: #d2d2d2;
}

QTabBar::tab:top:selected {
    border-top: 0.4em solid qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #5e90fa, stop:1 #3874f2); /* selection color */
    border-bottom-color: #f5f5f5; /* same as tab content background color */
}

QTabBar::tab:bottom:selected {
    border-bottom: 0.4em solid qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #5e90fa, stop:1 #3874f2); /* selection color */
    border-top-color: #f5f5f5; /* same as tab content background color */
}

QTabBar::tab:right:selected {
    border-left: 0.4em solid qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #5e90fa, stop:1 #3874f2); /* selection color */
    border-right-color: #f5f5f5; /* same as tab content background color */
}

QTabBar::tab:left:selected {
    border-right: 0.4em solid qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #5e90fa, stop:1 #3874f2); /* selection color */
    border-left-color: #f5f5f5; /* same as tab content background color */
}

QTabBar::tab:!selected {
    color: rgba(0,0,0,160);
}

QTabBar::tab:!selected:hover {
    color: rgba(0,0,0,220);
    background-color: rgba(0,0,0,20);
}

QTabBar::tab:first:selected {
    margin-left: 0; /* the first selected tab has nothing to overlap with on the left */
}

QTabBar::tab:last:selected {
    margin-right: 0; /* the last selected tab has nothing to overlap with on the right */
}

QTabBar::tab:only-one {
    margin: 0; /* if there is only one tab, we don't want overlapping margins */
}

/* hack to access Preference TabBar background */
QDialog#Gui__Dialog__DlgPreferences > QFrame QFrame {
    background-color: transparent; /* main background color (in Windows is #f5f5f5) */
}

/* fix for previous hack that broke QTabWidget background on Windows */
QDialog#Gui__Dialog__DlgPreferences QTabWidget::pane {
    background-color: transparent; /* temporal (transparent background) */
}

/* hack to correctly align Preferences icon list */
QDialog#Gui__Dialog__DlgPreferences > QListView {
    min-width: 3em;

    /* Setting the height here has no bearing on the rendered icon list - DON'T know why */
}

/* unique styles for sections inside Preferences */
QDialog#Gui__Dialog__DlgPreferences > QListView::item {
    border-radius: 0.2em;

    /* Setting the height here has no bearing on the rendered icon list - DON'T know why */
}

QDialog#Gui__Dialog__DlgPreferences > QListView::item:hover {
    background-color: #dcdcdc;
}

QDialog#Gui__Dialog__DlgPreferences > QListView::item:selected {
    color: white;
    background-color: #5e90fa;
}


/*****************************************************************************
 *
 * Tab bar buttons
 *
 *****************************************************************************
 */
/* Close button */
QTabBar::close-button {
    subcontrol-origin: margin;
    subcontrol-position: center right; /* only works for QT 4.6 and newer */;
    border-radius: 0.2em;
    background-image: url(qss:images_dark-light/close_dark.svg);
    background-position: center center;
    background-repeat: none;
}

QTabBar::close-button:hover {
    background-color: rgba(0,0,0,20);
}

QTabBar::close-button:pressed {
    background-color: rgba(0,0,0,30);
}

/* Fix for lists inside Model tab */
QDockWidget QTreeView,
QDockWidget QListView,
QDockWidget QTableView {
    margin: 0.6em;
    border: 0.1em solid #c3c3c3; /* same as regular QTreeView, QListView and QTableView */
    min-height: 0.40em; /* necessary in some areas of FreeCAD */
}

/***************************************************
 *
 * Set the height of the widgets list in Multitransform tool parameters
 *
 ***************************************************
 */
QDockWidget QListView#listWidgetFeatures,
QDockWidget QListView#listTransformFeatures
{
    margin: 0.6em;
    min-height: 5em;
    max-height: 10em;
}

/* Buttons to scroll tabs if there is not space to show all of them: */
QTabBar::scroller {
    width: 0.20em; /* the width of the scroll buttons */
}

QTabBar QToolButton,
QTabBar QToolButton:hover {
    background-color: #f5f5f5; /* same as main background color */
}

QTabBar QToolButton::right-arrow:enabled {
     image: url(qss:images_dark-light/right_arrow_dark.svg);
}

QTabBar QToolButton::right-arrow:disabled,
QTabBar QToolButton::right-arrow:off {
     image: url(qss:images_dark-light/right_arrow_disabled_dark.svg);
}

QTabBar QToolButton::right-arrow:hover {
     image: url(qss:images_dark-light/right_arrow_darker.svg);
}

 QTabBar QToolButton::left-arrow:enabled {
     image: url(qss:images_dark-light/left_arrow_dark.svg);
}

 QTabBar QToolButton::left-arrow:disabled,
 QTabBar QToolButton::left-arrow:off {
     image: url(qss:images_dark-light/left_arrow_disabled_dark.svg);
}

 QTabBar QToolButton::left-arrow:hover {
     image: url(qss:images_dark-light/left_arrow_darker.svg);
}

 QTabBar QToolButton::up-arrow:enabled {
     image: url(qss:images_dark-light/up_arrow_dark.svg);
}

 QTabBar QToolButton::up-arrow:disabled,
 QTabBar QToolButton::up-arrow:off {
     image: url(qss:images_dark-light/up_arrow_disabled_dark.svg);
}

 QTabBar QToolButton::up-arrow:hover {
     image: url(qss:images_dark-light/up_arrow_darker.svg);
}

 QTabBar QToolButton::down-arrow:enabled {
     image: url(qss:images_dark-light/down_arrow_dark.svg);
}

 QTabBar QToolButton::down-arrow:disabled,
 QTabBar QToolButton::down-arrow:off {
     image: url(qss:images_dark-light/down_arrow_disabled_dark.svg);
}

 QTabBar QToolButton::down-arrow:hover {
     image: url(qss:images_dark-light/down_arrow_darker.svg);
}

QTabBar::tear {
    /* default OS tear better */
}


/*****************************************************************************
 *
 * Tree and list views
 *
 *****************************************************************************
 */
QTreeView,
QListView,
QTableView {
    background-color: #f0f0f0;
    alternate-background-color: #e6e6e6; /* related with QListView background  */
    border: 0.1em solid #c3c3c3;
    selection-color: white;
    selection-background-color: #5e90fa; /* should be similar to QListView::item selected background-color */
    show-decoration-selected: 1; /* make the selection span the entire width of the view */
    border-radius: 0.3em;
}

QListView::item:hover,
QTreeView::item:hover  {
    background-color: transparent; /* fix to homogenize it on all OSs */
}

QListView::item:selected,
QTreeView::item:selected  {
    color: white; /* should be similar to QListView selection-color */
    background-color: #5e90fa; /* should be similar to QListView selection-background-color */
    show-decoration-selected: 1; /* make the selection span the entire width of the view */
}

/* Property Editor QTreeView (FreeCAD custom widget) */
Gui--PropertyEditor--PropertyEditor {
    gridline-color: #d2d2d2; /* same as Group header background */
}

/* fix for column items background when a link is present */
Gui--PropertyEditor--PropertyEditor > QWidget > QFrame:focus {
    background-color: #cbd8e6; /* same as focused background color */
}

/* hack to hide weird redundant information inside the value of a Placement cell */
Gui--PropertyEditor--PropertyEditor > QWidget > QWidget > QLabel,
Gui--PropertyEditor--PropertyEditor > QWidget > QWidget > QLabel:disabled {
    color: transparent;
    background-color: transparent;
    border: none;
    border-radius: 0em;
    margin: 0em;
    padding: 0em;
}

/* hack to hide non editable cells inside Property values */
Gui--PropertyEditor--PropertyEditor QLineEdit:read-only,
Gui--PropertyEditor--PropertyEditor QLineEdit:disabled,
Gui--PropertyEditor--PropertyEditor QAbstractSpinBox:read-only,
Gui--PropertyEditor--PropertyEditor QAbstractSpinBox:disabled {
    color: transparent;
    border-color: transparent;
    background-color: transparent;
    selection-color: transparent;
    selection-background-color: transparent;
}

/* hack to hide weird redundant information inside cells with links and no editable data (but editable via "..." button) */
Gui--PropertyEditor--PropertyEditor > QWidget > QWidget > QLabel {
    color: black;
    background-color: #cbd8e6;
}

/* hack to disable margin inside Property values to following elements */
Gui--PropertyEditor--PropertyEditor QSpinBox,
Gui--PropertyEditor--PropertyEditor QDoubleSpinBox,
Gui--PropertyEditor--PropertyEditor QAbstractSpinBox,
Gui--PropertyEditor--PropertyEditor QLineEdit,
Gui--PropertyEditor--PropertyEditor QComboBox {
    margin-left: 0em;
    margin-right: 0em;
    padding-top: 0em;
    padding-bottom: 0em;
}

/* reset min-height to 0em inside list views */
QTreeView > QWidget > QComboBox,
QTreeView > QWidget > QAbstractSpinBox,
QTreeView > QWidget > QSpinBox,
QTreeView > QWidget > QDoubleSpinBox,
QTreeView > QWidget > QLineEdit,
QTreeView > QWidget > QTextEdit,
QTreeView > QWidget > QTimeEdit,
QTreeView > QWidget > QDateEdit,
QTreeView > QWidget > QDateTimeEdit,
QTreeView > QWidget > Gui--ColorButton {
    min-height: 0em;
}

/* set border-radius to 0em inside list views */
QTreeView > QWidget > QComboBox,
QTreeView > QWidget > QAbstractSpinBox,
QTreeView > QWidget > QSpinBox,
QTreeView > QWidget > QDoubleSpinBox,
QTreeView > QWidget > QLineEdit,
QTreeView > QWidget > QTextEdit,
QTreeView > QWidget > QTimeEdit,
QTreeView > QWidget > QDateEdit,
QTreeView > QWidget > QDateTimeEdit,
QTreeView > QWidget > QComboBox:drop-down,
QTreeView > QWidget > QAbstractSpinBox:up-button,
QTreeView > QWidget > QSpinBox:up-button,
QTreeView > QWidget > QDoubleSpinBox:up-button,
QTreeView > QWidget > QTimeEdit:up-button,
QTreeView > QWidget > QDateEdit:up-button,
QTreeView > QWidget > QDateTimeEdit:up-button,
QTreeView > QWidget > QAbstractSpinBox:down-button,
QTreeView > QWidget > QSpinBox:down-button,
QTreeView > QWidget > QDoubleSpinBox:down-button,
QTreeView > QWidget > QTimeEdit:down-button,
QTreeView > QWidget > QDateEdit:down-button,
QTreeView > QWidget > QDateTimeEdit:down-button,
QTreeView > QWidget > Gui--ColorButton {
    border-radius: 0em;
}

/* set focus colors to best viewing the editable fields */
QTreeView > QWidget > QComboBox:focus,
QTreeView > QWidget > QAbstractSpinBox:focus,
QTreeView > QWidget > QSpinBox:focus,
QTreeView > QWidget > QDoubleSpinBox:focus,
QTreeView > QWidget > QLineEdit:focus,
QTreeView > QWidget > QTextEdit:focus,
QTreeView > QWidget > QTimeEdit:focus,
QTreeView > QWidget > QDateEdit:focus,
QTreeView > QWidget > QDateTimeEdit:focus {
    border-color: #cbd8e6; /* same as focused background color */
    border-bottom-color: #7cabf9; /* same as focused border color */
}

QTreeView > QWidget > QAbstractSpinBox:read-only,
QTreeView > QWidget > QSpinBox:read-only,
QTreeView > QWidget > QDoubleSpinBox:read-only,
QTreeView > QWidget > QLineEdit:read-only,
QTreeView > QWidget > QTextEdit:read-only,
QTreeView > QWidget > QTimeEdit:read-only,
QTreeView > QWidget > QDateEdit:read-only,
QTreeView > QWidget > QDateTimeEdit:read-only {
    color: transparent;
    background-color: transparent;
    border-color: transparent;
}

/* Fix to correctly (not totally) draw QTextEdit on OSX at Page properties: "Page result", "Template" and "Editable Texts" */
Gui--PropertyEditor--PropertyEditor > QWidget > QWidget > QWidget {
    min-height: 1em;
    border-radius: 0em; /* reset */
}


/*****************************************************************************
 *
 * Header of tree and list views
 *
 *****************************************************************************
 */
QHeaderView {
    background-color: #c3c3c3;
    border-top-left-radius: 0.2em; /* 1em less than its container */
    border-top-right-radius: 0.2em; /* 1em less than its container */
    border-bottom-left-radius: 0em;
    border-bottom-right-radius: 0em;
}

QHeaderView::section {
    border:none;
    padding: 0.4em 0.6em;
    background-color: #c3c3c3;
}

QHeaderView::section:horizontal {
    padding: 0.4em 0.6em; /* left and right value similar to QHeaderView::section */
    border-right: 0.1em solid rgba(0,0,0,30);
}

QHeaderView::section:vertical {
    border-bottom: 0.1em solid rgba(0,0,0,30);
}

QTableCornerButton::section {
    background-color: #c3c3c3;
    border-top: none;
    border-left: none;
    border-right: 0.1em solid rgba(0,0,0,30);
    border-bottom: 0.1em solid rgba(0,0,0,30);
}

QHeaderView::section:last {
    border-right: none;
}

QHeaderView::up-arrow {
    image: url(qss:images_dark-light/up_arrow_dark.svg);
}

QHeaderView::up-arrow:hover {
    image: url(qss:images_dark-light/up_arrow_darker.svg);
}

QHeaderView::down-arrow {
    image: url(qss:images_dark-light/down_arrow_dark.svg);
}

QHeaderView::down-arrow:hover {
    image: url(qss:images_dark-light/down_arrow_darker.svg);
}

/* Group header inside Property Editor (FreeCAD custom widget) */
Gui--PropertyEditor--PropertyEditor {
    qproperty-groupTextColor: #828282; /* same as main background color */
    qproperty-groupBackground: #d2d2d2; /* same as item gridlines */
}


/*****************************************************************************
 *
 * Branch system for QTreeViews
 *
 *****************************************************************************
 */
QTreeView::branch  {
    background: transparent;
}

QTreeView::branch:has-siblings:!adjoins-item  {
    border-image: url(qss:images_dark-light/branch_vline_dark.svg) 0;
}

QTreeView::branch:has-siblings:adjoins-item  {
    border-image: url(qss:images_dark-light/branch_more_dark.svg) 0;
}

QTreeView::branch:!has-children:!has-siblings:adjoins-item  {
    border-image: url(qss:images_dark-light/branch_end_dark.svg) 0;
}

QTreeView::branch:closed:has-children:has-siblings  {
    border-image: url(qss:images_dark-light/branch_more_closed_dark.svg) 0;
}

QTreeView::branch:has-children:!has-siblings:closed  {
    border-image: url(qss:images_dark-light/branch_end_closed_dark.svg) 0;
}

QTreeView::branch:open:has-children:has-siblings  {
    border-image: url(qss:images_dark-light/branch_more_open_dark.svg) 0;
}

QTreeView::branch:open:has-children:!has-siblings  {
    border-image: url(qss:images_dark-light/branch_end_open_dark.svg) 0;
}


/*****************************************************************************
 *
 * Splitter and windows separator
 *
 *****************************************************************************
 */
QSplitter::handle {
    margin: 0em 0.11em;
    padding: 0em;
}

QSplitter::handle:horizontal {
    background-image: url(qss:images_dark-light/splitter_vertical_dark.svg);
    background-position: center center;
    background-repeat: none;
    margin: 0.4em 0.2em 0.4em 0.2em;
    width: 0.2em;
}

QSplitter::handle:vertical {
    background-image: url(qss:images_dark-light/splitter_horizontal_dark.svg);
    background-position: center center;
    background-repeat: none;
    margin: 0.2em 0.4em 0.2em 0.4em;
    height: 0.2em;
}

/* Similar to the splitter is the following window separator (but horizontal/vertical is on the opposite way) */
QMainWindow::separator {
    background-position: center center;
    background-repeat: none;
}

QMainWindow::separator:horizontal {
    height: 0.2em;
    background-image: url(qss:images_dark-light/splitter_horizontal_dark.svg);
    margin: 0.4em 0.2em 0.4em 0.2em;
}

QMainWindow::separator:vertical {
    width: 0.2em;
    background-image: url(qss:images_dark-light/splitter_vertical_dark.svg);
    margin: 0.2em 0.4em 0.2em 0.4em;
}


/*****************************************************************************
 *
 * Text/Python editor (macros, etc...)
 *
 *****************************************************************************
 */
QPlainTextEdit,
QPlainTextEdit:focus {
    background-color: #f0f0f0;
    selection-color: white;
    selection-background-color: #3874f2;
    border: 0.1em solid #c3c3c3;
    border-radius: 0.3em;
    margin: 0.4em;
}


/*****************************************************************************
 *
 * Tasks panel (custom FreeCAD class)
 *
 *****************************************************************************
 */
/* Action group */
QFrame[class="panel"] {
    background-color: transparent; /* temporal (transparent background) */
}

QSint--ActionGroup {
    padding: 0em; /* if not reset, it might create problems with QPushButtons and other elements */
    margin: 0em; /* if not reset, it might create problems with QPushButtons and other elements */
}

/* Separator line */
QSint--ActionGroup QFrame[height="1"],
QSint--ActionGroup QFrame[height="2"],
QSint--ActionGroup QFrame[height="3"],
QSint--ActionGroup QFrame[width="1"],
QSint--ActionGroup QFrame[width="2"],
QSint--ActionGroup QFrame[width="3"] {
    border-color: rgba(0,0,0,60);
}

/* Panel header */
QSint--ActionGroup QFrame[class="header"] {
    border: none;
    background-color: #b6b6b6; /* Task Panel Header background color */
    border-top-left-radius: 0.3em;
    border-top-right-radius: 0.3em;
    border-bottom-left-radius: 0em;
    border-bottom-right-radius: 0em;
    margin: 0em;
    padding: 0em;
}

QSint--ActionGroup QFrame[class="header"]:hover {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #5e90fa, stop:1 #3874f2);
}

QSint--ActionGroup QToolButton[class="header"] {
    color: white; /* Task Panel Header text color */
    text-align: left;
    font-weight: bold;
    border: none;
    margin: 0em;
    padding: 0em;
}

QSint--ActionGroup QFrame[class="header"] QLabel {
    background-color: transparent;
    background-image: url(qss:images_dark-light/down_arrow_light.svg);
    background-repeat: none;
    background-position: center center;
    padding: 0em;
    margin: 0em;
}

QSint--ActionGroup QFrame[class="header"] QLabel:hover {
    background-color: transparent;
    background-image: url(qss:images_dark-light/down_arrow_lighter.svg);
}

QSint--ActionGroup QFrame[class="header"] QLabel[fold="true"] {
    background-color: transparent;
    background-image: url(qss:images_dark-light/up_arrow_light.svg);
    background-repeat: none;
    background-position: center center;
    padding: 0em;
    margin: 0em;
}

QSint--ActionGroup QFrame[class="header"] QLabel[fold="true"]:hover {
    background-color: transparent;
    background-image: url(qss:images_dark-light/up_arrow_lighter.svg);
}

QSint--ActionGroup QFrame[class="content"] {
    background-color: #e6e6e6; /* Task Panel background color */
    margin: 0em;
    padding: 0em;
    border: none;
    border-top-left-radius: 0em;
    border-top-right-radius: 0em;
    border-bottom-left-radius: 0.3em;
    border-bottom-right-radius: 0.3em;
}

QSint--ActionGroup QFrame[class="content"] > QWidget {
    background-color: #e6e6e6; /* Task Panel background color */
}

/* Fixs for tabs inside Task Panel */
QSint--ActionGroup QFrame[class="content"] QTabBar::tab:top:selected {
    border-bottom-color: #e6e6e6; /* same as Task Panel background color */
}

QSint--ActionGroup QFrame[class="content"] QTabBar::tab:bottom:selected {
    border-top-color: #e6e6e6; /* same as Task Panel background color */
}

QSint--ActionGroup QFrame[class="content"] QTabBar::tab:right:selected {
    border-right-color: #e6e6e6; /* same as Task Panel background color */
}

QSint--ActionGroup QFrame[class="content"] QTabBar::tab:left:selected {
    border-left-color: #e6e6e6; /* same as Task Panel background color */
}

/* Fix for buttons with icons that showed cropped (still not happy with result) */
QSint--ActionGroup QFrame[class="content"] > QWidget > QPushButton {
    padding: 0.1em; /* bigger padding crops text and icons... */
    margin: 0em;
}

/* Fix for lists inside task panels */
/* QSint--ActionGroup QFrame[class="content"] QTreeView,
QSint--ActionGroup QFrame[class="content"] QListView,
QSint--ActionGroup QFrame[class="content"] QTableView {
    color: #f5f5f5;
    background-color: #787878;
} */


/*****************************************************************************
 *
 * Buttons
 *
 *****************************************************************************
 */
/* Common */
QComboBox,
QAbstractSpinBox,
QSpinBox,
QDoubleSpinBox,
QLineEdit,
QTextEdit,
QTimeEdit,
QDateEdit,
QDateTimeEdit {
    color: #6e6e6e;
    background-color: #e0e0e0;
    selection-color: white;
    selection-background-color: #5e90fa;
    border: 0.1em solid #e0e0e0;
    border-radius: 1em;
    min-width: 10em; /* it ensures the default value is correctly displayed */
    min-height: 0.75em; /* important to be a pair number in order to up/down buttons to be divisible by two (if not set could create a blank line in Ubuntu. Its downside is that it's needed to reset it (min-width: 0em) on following elements that can't have it such as fields inside QToolBar and inside QTreeView (Property editor) */
}

/* more contrast for QTexEdits */
QTextEdit {
    color: black;
}

/* shifts text/number editable field to the left to make space for the up/down or drop-down buttons */
QComboBox,
QAbstractSpinBox,
QSpinBox,
QDoubleSpinBox,
QTimeEdit,
QDateEdit,
QDateTimeEdit {
    padding-right: 0.20em;
}

/* when QTextEdit are no editable (like Report view)*/
QTextEdit:!editable,
QTextEdit:!editable:focus {
    background-color: #f0f0f0;
    border: 0.1em solid #c3c3c3;
}

QComboBox:focus,
QAbstractSpinBox:focus,
QSpinBox:focus,
QDoubleSpinBox:focus,
QLineEdit:focus,
QTextEdit:focus,
QTimeEdit:focus,
QDateEdit:focus,
QDateTimeEdit:focus {
    color: black;
    border-color: #7cabf9;
    border-right-color: qlineargradient(spread:pad, x1:1, y1:0.8, x2:1, y2:0, stop:0 #5e90fa, stop:1 #7cabf9); /* same as up/down or drop-down button color */
    background-color: #cbd8e6;
}

QComboBox:disabled,
QAbstractSpinBox:disabled,
QSpinBox:disabled,
QDoubleSpinBox:disabled,
QLineEdit:disabled,
QTextEdit:disabled,
QTimeEdit:disabled,
QDateEdit:disabled,
QDateTimeEdit:disabled {
    color: #c3c3c3;
    background-color: #e0e0e0; /* same as enabled color */
    border-color: #e0e0e0; /* same as enabled color */
}

QAbstractSpinBox:up-button,
QSpinBox:up-button,
QDoubleSpinBox:up-button,
QTimeEdit:up-button,
QDateEdit:up-button,
QDateTimeEdit:up-button,
QAbstractSpinBox:down-button,
QSpinBox:down-button,
QDoubleSpinBox:down-button,
QTimeEdit:down-button,
QDateEdit:down-button,
QDateTimeEdit:down-button {
    background-color: #d2d2d2;
    subcontrol-origin: border; /* important */
    width: 1em; /* same as QComboBox ... QDateTimeEdit padding-right */
}

QAbstractSpinBox:up-button,
QSpinBox:up-button,
QDoubleSpinBox:up-button,
QTimeEdit:up-button,
QDateEdit:up-button,
QDateTimeEdit:up-button {
    subcontrol-position: top right;
    border-top-right-radius: 0.3em;
}

QAbstractSpinBox:down-button,
QSpinBox:down-button,
QDoubleSpinBox:down-button,
QTimeEdit:down-button,
QDateEdit:down-button,
QDateTimeEdit:down-button {
    subcontrol-position: bottom right;
    border-bottom-right-radius: 0.3em;
}

QAbstractSpinBox:up-button:focus,
QSpinBox:up-button:focus,
QDoubleSpinBox:up-button:focus,
QTimeEdit:up-button:focus,
QDateEdit:up-button:focus,
QDateTimeEdit:up-button:focus {
    background-color: qlineargradient(spread:pad, x1:1, y1:0.8, x2:1, y2:0, stop:0 #6f9efa, stop:1 #7cabf9);
}

QAbstractSpinBox:down-button:focus,
QSpinBox:down-button:focus,
QDoubleSpinBox:down-button:focus,
QTimeEdit:down-button:focus,
QDateEdit:down-button:focus,
QDateTimeEdit:down-button:focus {
    background-color: qlineargradient(spread:pad, x1:1, y1:0.8, x2:1, y2:0, stop:0 #5e90fa, stop:1 #6f9efa);
}

QAbstractSpinBox:up-button:disabled,
QSpinBox:up-button:disabled,
QDoubleSpinBox:up-button:disabled,
QTimeEdit:up-button:disabled,
QDateEdit:up-button:disabled,
QDateTimeEdit:up-button:disabled,
QAbstractSpinBox:down-button:disabled,
QSpinBox:down-button:disabled,
QDoubleSpinBox:down-button:disabled,
QTimeEdit:down-button:disabled,
QDateEdit:down-button:disabled,
QDateTimeEdit:down-button:disabled {
    background-color: transparent;
}

QAbstractSpinBox::up-arrow,
QSpinBox::up-arrow,
QDoubleSpinBox::up-arrow,
QTimeEdit::up-arrow,
QDateEdit::up-arrow,
QDateTimeEdit::up-arrow {
    image: url(qss:images_dark-light/up_arrow_dark.svg);
    top: 0.2em; /* fix symmetry between up and down images */
}

QAbstractSpinBox::up-arrow:focus,
QSpinBox::up-arrow:focus,
QDoubleSpinBox::up-arrow:focus,
QTimeEdit::up-arrow:focus,
QDateEdit::up-arrow:focus,
QDateTimeEdit::up-arrow:focus {
    image: url(qss:images_dark-light/up_arrow_lighter.svg);
}

QAbstractSpinBox::up-arrow:off,
QSpinBox::up-arrow:off,
QDoubleSpinBox::up-arrow:off,
QTimeEdit::up-arrow:off,
QDateEdit::up-arrow:off,
QDateTimeEdit::up-arrow:off {
    image: url(qss:images_dark-light/up_arrow_disabled_dark.svg);
}

QAbstractSpinBox::up-arrow:disabled,
QSpinBox::up-arrow:disabled,
QDoubleSpinBox::up-arrow:disabled,
QTimeEdit::up-arrow:disabled,
QDateEdit::up-arrow:disabled,
QDateTimeEdit::up-arrow:disabled {
    image: url(qss:images_dark-light/up_arrow_disabled_dark.svg);
}

QAbstractSpinBox::down-arrow,
QSpinBox::down-arrow,
QDoubleSpinBox::down-arrow,
QTimeEdit::down-arrow,
QDateEdit::down-arrow,
QDateTimeEdit::down-arrow {
    image: url(qss:images_dark-light/down_arrow_dark.svg);
    bottom: 0em; /* fix simetry between up and down images */
}

QAbstractSpinBox::down-arrow:focus,
QSpinBox::down-arrow:focus,
QDoubleSpinBox::down-arrow:focus,
QTimeEdit::down-arrow:focus,
QDateEdit::down-arrow:focus,
QDateTimeEdit::down-arrow:focus {
    image: url(qss:images_dark-light/down_arrow_lighter.svg);
}

QAbstractSpinBox::down-arrow:off,
QSpinBox::down-arrow:off,
QDoubleSpinBox::down-arrow:off,
QTimeEdit::down-arrow:off,
QDateEdit::down-arrow:off,
QDateTimeEdit::down-arrow:off {
    image: url(qss:images_dark-light/down_arrow_disabled_dark.svg);
}

QAbstractSpinBox::down-arrow:disabled,
QSpinBox::down-arrow:disabled,
QDoubleSpinBox::down-arrow:disabled,
QTimeEdit::down-arrow:disabled,
QDateEdit::down-arrow:disabled,
QDateTimeEdit::down-arrow:disabled {
    image: url(qss:images_dark-light/down_arrow_disabled_dark.svg);
}

/* ComboBox */
QComboBox::drop-down {
    background-color: #d2d2d2;
    subcontrol-origin: border; /* important */
    subcontrol-position: top right;
    width: 1em;
    border-top-right-radius: 0.3em;
    border-bottom-right-radius: 0.3em;
}

QComboBox::drop-down:on,
QComboBox::drop-down:focus {
    background-color: qlineargradient(spread:pad, x1:1, y1:0.8, x2:1, y2:0, stop:0 #5e90fa, stop:1 #7cabf9);
}

QComboBox::down-arrow {
    image: url(qss:images_dark-light/down_arrow_dark.svg);
}

QComboBox::down-arrow:on,
QComboBox::down-arrow:focus {
    image: url(qss:images_dark-light/down_arrow_lighter.svg);
}

QComboBox::down-arrow:off,
QComboBox::down-arrow:disabled {
    image: url(qss:images_dark-light/down_arrow_disabled_dark.svg);
}

/* ComboBox menu */
QComboBox {
    selection-color: white;
    selection-background-color: #5e90fa;
}

QComboBox QAbstractItemView {
    color: #6e6e6e; /* same as regular QComboBox color */
    background-color: transparent;
    selection-color: white;
    selection-background-color: #5e90fa;
    border-width: 0.5em 0em 0.5em 0em;
    border-style: solid;
    border-color: transparent;
    margin: 0em -0.1em 0em 0em; /* temporal: hack for Mac... try it on Windows and Linux */
}


/*****************************************************************************
 *
 * Push button
 *
 *****************************************************************************
 */
QPushButton {
    color: #6e6e6e;
    text-align: center;
    background-color: qlineargradient(spread:pad, x1:0, y1:0.3, x2:0, y2:1, stop:0 #f5f5f5, stop:1 #e6e6e6);
    border: 0.1em solid #d2d2d2;
    border-bottom-color: #c3c3c3; /* simulates shadow under the button */
    padding: 0.05em 0.05em;
    margin: 0.1em 0.1em;
    min-height: 1em; /* same as QTabBar QPushButton min-width */
    border-radius: 0.2em;
}

QPushButton:hover,
QPushButton:focus {
    color: white;
    border-color: #3874f2;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #5e90fa, stop:1 #3874f2);
}

QPushButton:disabled,
QPushButton:disabled:checked {
    color: #b6b6b6;
    border-color: #e6e6e6;
    background-color: #e6e6e6;
}

QPushButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #3874f2, stop:1 #5e90fa);
}

QPushButton:checked {
    background-color: #5e90fa;
    border-color: #3874f2;
}

/* Color Buttons */
Gui--ColorButton,
Gui--ColorButton:disabled {
    padding: 0em; /* reset */
    margin: 0em; /* reset */
}

Gui--ColorButton {
    background-color: qlineargradient(spread:pad, x1:0, y1:0.3, x2:0, y2:1, stop:0 #f5f5f5, stop:1 #e6e6e6);
    border: 0.1em solid #d2d2d2;
    border-bottom-color: #c3c3c3; /* simulates shadow under the button */
}

Gui--ColorButton:disabled {
    border-color: transparent;
    background-color: rgba(0,0,0,10);
}

Gui--ColorButton:hover,
Gui--ColorButton:focus {
    border-color: #3874f2;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #5e90fa, stop:1 #3874f2);
}

Gui--ColorButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #3874f2, stop:1 #5e90fa);
}

/* Pushbutton style for "..." inside Placement cell which launches Placement tool */
Gui--PropertyEditor--PropertyEditor > QWidget > QWidget > QPushButton {
    background-color: #b6b6b6;
    border: 0.1em solid #828282;
    min-width: 0.16em; /* reset it due to larger value on regular QPushButton, same or bigger value as regular QPushButton min-height */
    border-radius: 0em;
    margin: 0em; /* reset */
    padding: 0em; /* reset */
}

/* Fix for Expressions description QFrame that is "broken" with initial reset */
Gui--PropertyEditor--PropertyEditor > QWidget > QWidget > QWidget > QWidget > QFrame {
    background-color: #f5f5f5; /* main background color */
    border: 0.1em solid #dcdcdc;
    border-radius: 0.2em;
    padding: 0.2em 0.6em;
}

QPushButton:checked {
    background-color: #5e90fa;
    border-color: #3874f2;
}

/*****************************************************************************
 *
 * Tool button Icon fix in save dialogs
 *
 *****************************************************************************
 */
/* found under Tools -> Save Picture */ /* Draft -> ShapeString -> Font file */

QFileDialog#QFileDialog QToolButton {
    background-color: transparent;
    padding: 0.1em;
    border: 0.1em;
    margin: 0em;
}


/*****************************************************************************
 *
 * Tool button inside QDialogs that works as QPushButtons
 *
 *****************************************************************************
 */
/* found under Tools -> Customize -> Macros -> Pixmap "..." button */
QDialog QToolButton {
    color: #6e6e6e;
    text-align: center;
    background-color: qlineargradient(spread:pad, x1:0, y1:0.3, x2:0, y2:1, stop:0 #f5f5f5, stop:1 #e6e6e6);
    border: 0.1em solid #d2d2d2;
    border-bottom-color: #c3c3c3; /* simulates shadow under the button */
    padding: 0em; /* different than regular QPushButton */
    margin: 0.2em; /* different than regular QPushButton */
    min-height: 0.16em; /* same as QTabBar QPushButton min-width */
    border-radius: 0.4em;
}

QDialog QToolButton:hover,
QDialog QToolButton:focus {
    color: white;
    border-color: #3874f2;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #5e90fa, stop:1 #3874f2);
}

QDialog QToolButton:disabled,
QDialog QToolButton:disabled:checked {
    color: #b6b6b6;
    border-color: #e6e6e6;
    background-color: #e6e6e6;
}

QDialog QToolButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #3874f2, stop:1 #5e90fa);
}


/*****************************************************************************
 *
 * Tool button inside Task Panel content that works as QPushButtons
 *
 *****************************************************************************
 */
/* found inside Part Design Workbench and "make a draft on a face" Task panel options */
QSint--ActionGroup QFrame[class="content"] QToolButton {
    color: #6e6e6e;
    text-align: center;
    background-color: qlineargradient(spread:pad, x1:0, y1:0.3, x2:0, y2:1, stop:0 #f5f5f5, stop:1 #e6e6e6);
    border: 0.1em solid #d2d2d2;
    border-bottom-color: #c3c3c3; /* simulates shadow under the button */
    padding: 0.2em 0.6em; /* different than regular QPushButton */
    margin: 0.2em; /* different than regular QPushButton */
    min-height: 0.16em; /* same as QTabBar QPushButton min-width */
    border-radius: 0.4em;
}

QSint--ActionGroup QFrame[class="content"] QToolButton:hover,
QSint--ActionGroup QFrame[class="content"] QToolButton:focus {
    color: white;
    border-color: #3874f2;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #5e90fa, stop:1 #3874f2);
}

QSint--ActionGroup QFrame[class="content"] QToolButton:disabled,
QSint--ActionGroup QFrame[class="content"] QToolButton:disabled:checked {
    color: #b6b6b6;
    border-color: #e6e6e6;
    background-color: #e6e6e6;
}

QSint--ActionGroup QFrame[class="content"] QToolButton:pressed {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #3874f2, stop:1 #5e90fa);
}


/*****************************************************************************
 *
 * Radio button
 *
 *****************************************************************************
 */
QRadioButton::indicator:unchecked{
    color: #505050;
    background-color: rgba(0,0,0,20);
    border: 0.1em solid #505050;
}

QRadioButton::indicator:checked {
    background-color: #5e90fa; /* QCheckBox has the same color */
    border: 0.1em solid #3874f2; /* QCheckBox has the same color */
    image:url(qss:images_dark-light/radiobutton_light.svg);
}

QRadioButton,
QRadioButton:disabled {
    color: #505050;
    padding: 0.3em;
    outline: none;
    background-color: transparent;
}

QRadioButton:disabled {
    color: rgba(0,0,0,40);
}

QRadioButton::indicator {
    width: 1em;
    height: 1em;
    border-radius: 0.1em;
}

QRadioButton::indicator:pressed {
    border-color: #adc5ed;
}

QRadioButton::indicator:disabled {
    color: #6e6e6e;
    background-color: transparent;
    border: 0.1em solid #6e6e6e;
}

QRadioButton:focus {
    border: none;
}


/*****************************************************************************
 *
 * Checkbox
 *
 *****************************************************************************
 */
QCheckBox,
QCheckBox:disabled {
    color: #505050;
    padding: 0.3em;
    outline: none;
    background-color: transparent;
}

QCheckBox::indicator,
QGroupBox::indicator {
    color: #c8c8c8;
    background-color: rgba(0,0,0,20);
    border: 0.1em solid #505050;
    width: 1em;
    height: 1em;
    border-radius:0.2em;
}

QCheckBox::indicator:pressed,
QCheckBox::indicator:non-exclusive:checked:pressed,
QCheckBox::indicator:indeterminate:pressed,
QCheckBox::indicator:checked:pressed,
QGroupBox::indicator:pressed,
QGroupBox::indicator:non-exclusive:checked:pressed,
QGroupBox::indicator:indeterminate:pressed,
QGroupBox::indicator:checked:pressed {
    border-color: #adc5ed;
}

QCheckBox::indicator:checked,
QGroupBox::indicator:checked {
    background-color: #5e90fa; /* QRadioButton has the same color */
    border: 0.1em solid #3874f2; /* QRadioButton has the same color */
    image:url(qss:images_dark-light/checkbox_light.svg);
}

QCheckBox:disabled {
    color: rgba(0,0,0,40);
    background-color: transparent;
}

QCheckBox::indicator:disabled,
QGroupBox::indicator:disabled {
    background-color: rgba(0,0,0,20);
    border: 0.1em solid rgba(0,0,0,20);
}

QCheckBox::indicator:indeterminate,
QGroupBox::indicator:indeterminate {
    background-color: #5e90fa;
    border: 0.1em solid #3874f2;
    image: url(qss:images_dark-light/checkbox_indeterminate_light.svg);
}

QCheckBox:focus {
    border: none;
}


/*****************************************************************************
 *
 * Checkboxs inside QListWidget and QTreeView
 *
 *****************************************************************************
 */
QListWidget::indicator,
QTreeView::indicator {
    color: #c8c8c8;
    background-color: rgba(0,0,0,20);
    border: 0.1em solid #505050;
    width: 0.11em;
    height: 0.11em;
    border-radius:0.2em;
}

/* fix for QTreeView::indicator losing its margin */
QTreeView::indicator {
    margin: 0.3em;
}

QListWidget::indicator:selected,
QTreeView::indicator:selected {
    background-color: #e6e6e6;
}

QListWidget::indicator:checked:selected,
QListWidget::indicator:indeterminate:selected,
QTreeView::indicator:checked:selected,
QTreeView::indicator:indeterminate:selected {
    background-color: #7cabf9; /* slightly lighter than default */
    border-color: #2053c0; /* slightly darker than default */
}

QListWidget::indicator:pressed,
QListWidget::indicator:non-exclusive:checked:pressed,
QListWidget::indicator:indeterminate:pressed,
QListWidget::indicator:checked:pressed,
QTreeView::indicator:pressed,
QTreeView::indicator:non-exclusive:checked:pressed,
QTreeView::indicator:indeterminate:pressed,
QTreeView::indicator:checked:pressed {
    border-color: #adc5ed;
}

QListWidget::indicator:checked,
QTreeView::indicator:checked {
    background-color: #5e90fa; /* QRadioButton has the same color */
    border: 0.1em solid #3874f2; /* QRadioButton has the same color */
    image:url(qss:images_dark-light/checkbox_light.svg);
}

QListWidget::indicator:disabled,
QTreeView::indicator:disabled {
    background-color: rgba(0,0,0,20);
    border: 0.1em solid rgba(0,0,0,20);
}

QListWidget::indicator:indeterminate,
QTreeView::indicator:indeterminate {
    background-color: #5e90fa;
    border: 0.1em solid #3874f2;
    image: url(qss:images_dark-light/checkbox_indeterminate_light.svg);
}


/*****************************************************************************
 *
 * Slider
 *
 *****************************************************************************
 */
QSlider,
QSlider:active,
QSlider:!active {
    border: none;
    background-color: transparent;
}

QSlider:horizontal {
    padding: 0em 0.10em;
}

QSlider:vertical {
    padding: 0.10em 0em;
}

QSlider::groove {
    background-color: rgba(0,0,0,30);
    border: 0.1em solid rgba(0,0,0,40);
    border-radius: 0.5em;
    margin: 0.4em 0em;
}

QSlider::groove:horizontal {
    height: 0.8em;
}

QSlider::groove:vertical {
    width: 0.8em;
}

QSlider::groove:horizontal:disabled,
QSlider::groove:vertical:disabled {
    border-color:  #dcdcdc;
    background-color: #dcdcdc;
}

QSlider::handle:horizontal,
QSlider::handle:vertical {
    background-color: #b6b6b6;
    border: 0.1em solid #b6b6b6;
    width: 0.14em;
    height: 0.14em;
    border-radius: 0.8em;
}

QSlider::handle:horizontal {
    margin: -0.4em 0;
}

QSlider::handle:vertical {
    margin: 0 -0.4em;
}

QSlider::handle:horizontal:hover,
QSlider::handle:vertical:hover,
QSlider::handle:horizontal:pressed,
QSlider::handle:vertical:pressed {
    border-color: #5e90fa;
    background-color: #5e90fa;
}

QSlider::handle:horizontal:disabled,
QSlider::handle:vertical:disabled {
    border-color: #dcdcdc;
    background-color: #dcdcdc;
}


/*****************************************************************************
 *
 * Toolbar buttons
 *
 *****************************************************************************
 */
/*QToolBar > QComboBox,   disabled because creates different margins for body and drop-down button */
QToolBar > QAbstractSpinBox,
QToolBar > QSpinBox,
QToolBar > QDoubleSpinBox,
QToolBar > QLineEdit,
QToolBar > QTextEdit,
QToolBar > QTimeEdit,
QToolBar > QDateEdit,
QToolBar > QDateTimeEdit {
    margin: 0em 0.1em;
    padding: 0em;
    min-width: 0.2em; /* necessary to show its content */
}

QToolBar > QComboBox,
QToolBar > QAbstractSpinBox,
QToolBar > QSpinBox,
QToolBar > QDoubleSpinBox,
QToolBar > QLineEdit,
QToolBar > QTextEdit,
QToolBar > QTimeEdit,
QToolBar > QDateEdit,
QToolBar > QDateTimeEdit {
    min-height: 0em; /* reset it inside Tool Bar due to the user ability to set the "size of toolbar icons" inside Preferences  */
}

QToolBar > QPushButton {
    padding: 0em;
    margin: 0.1em; /* doesn't work with :left, :right:, :top or :bottom sub-controls */
    min-width: 0.1em; /* could not be larger due to switchable Preferences "Size of toolbar icons" */
    min-height: 0.1em; /* could not be larger due to switchable Preferences "Size of toolbar icons" */
    border-radius: 0.2em; /* same as regular QPushButton */
}

QToolBar > QPushButton:checked {
    border: 0.1em solid #7cabf9;
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #cbd8e6, stop:1 #7cabf9);
}

QToolBar > QPushButton:!checked {
    background-color: qlineargradient(spread:pad, x1:0, y1:0.3, x2:0, y2:1, stop:0 #f5f5f5, stop:1 #e6e6e6);
    border: 0.1em solid #d2d2d2;
    border-bottom-color: #c3c3c3; /* simulates shadow under the button */
    text-align: left; /* bug fix #4559 */
}

QToolBar > QPushButton:checked:hover {
    border-color: #6f9efa;
}

QToolBar > QPushButton:!checked:hover {
    color: black;
    border-color: #b6b6b6;
}

QToolBar > QPushButton:checked:pressed {
    background-color: #7cabf9;
}

QToolBar > QPushButton:!checked:pressed {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #b6b6b6, stop:1 #e6e6e6);
}

QToolBar > QPushButton:checked:disabled,
QToolBar > QPushButton:!checked:disabled {
    border: none;
    background-color: transparent;
}

QToolBar > QToolButton {
    margin: 0.1em;
    padding: 0em;
    border-radius: 0.2em;
}

QToolBar > QToolButton:hover {
    background-color: rgba(0,0,0,20);
}

QToolBar > QToolButton:pressed {
    background-color: rgba(0,0,0,30);
}

/* ToolBar menu buttons (buttons with drop-down menu) */
QToolBar > QToolButton#qt_toolbutton_menubutton {
    padding-right: 0.3em; /* Hack to add more width to buttons with menu */
    border: 0.1em solid transparent;
    border-radius: 0.3em;
}

QToolBar > QToolButton#qt_toolbutton_menubutton:hover,
QToolBar > QToolButton#qt_toolbutton_menubutton:pressed,
QToolBar > QToolButton#qt_toolbutton_menubutton:open {
    border: 0.1em solid #7cabf9;
}

QToolBar QToolButton::menu-button,
QToolBar > QToolButton#qt_toolbutton_menubutton::menu-button {
    border: none;
    border-top-right-radius: 0.3em;
    border-bottom-right-radius: 0.3em;
    width: 0.75em;
    outline: none;
    background-color: transparent;
}

QToolBar > QToolButton#qt_toolbutton_menubutton::menu-button:hover,
QToolBar > QToolButton#qt_toolbutton_menubutton::menu-button:pressed,
QToolBar > QToolButton#qt_toolbutton_menubutton::menu-button:open {
    background-color: qlineargradient(spread:pad, x1:1, y1:0.8, x2:1, y2:0, stop:0 #5e90fa, stop:1 #7cabf9);
}

QToolBar > QToolButton::menu-arrow {
    background-image: url(qss:images_dark-light/down_arrow_dark.svg);
    background-position: center center;
    background-repeat: none;
    subcontrol-origin: padding;
    subcontrol-position: bottom right;
    height: 2em;
}

QToolBar > QToolButton::menu-arrow:hover {
    background-image: url(qss:images_dark-light/down_arrow_lighter.svg);
}

QToolBar > QToolButton::menu-arrow:open {
    background-image: url(qss:images_dark-light/down_arrow_lighter.svg);
}

/* when QToolButton is checked: */
QToolButton:checked {
    border: 0.1em solid #7cabf9;
    background-color: rgba(124,171,249,60); /* transparency for #7cabf9 color */
}

QToolButton:checked:hover {
    border: 0.1em solid #7cabf9;
    background-color: rgba(124,171,249,80); /* transparency for #7cabf9 color */
}

/*The "show more" button  (it can also be stylable with "QToolBarExtension" */
QToolBar QToolButton#qt_toolbar_ext_button {
    margin: 0em;
    padding: 0em;
    /*background-image: url(qss:images_dark-light/more_dark.svg);*/
    image: transparent;
    background-repeat: none;
    background-position: center left;
}

QToolBar QToolButton#qt_toolbar_ext_button:hover {
    /*background-image: url(qss:images_dark-light/more_light.svg);*/
    border-color: #e0e0e0;
    background-color: #e0e0e0;
}

QToolBar QToolButton#qt_toolbar_ext_button:on {
    /*background-image: url(qss:images_dark-light/more_light.svg);*/
    border-color: #e0e0e0;
    background-color: #e0e0e0;
}


/*****************************************************************************
 *
 * Tables (spreadsheets)
 *
 *****************************************************************************
 */
QTableView {
    gridline-color: #d2d2d2;
    selection-color: #1b3774;
    selection-background-color: #cbd8e6;
}

QTableView::item:hover  {
    background-color: rgba(0,0,0,10);  /* temporal: is it displayed in Linux or Windows? on OSX it isn't */
}

QTableView::item:disabled  {
    color: #e6e6e6;
}

QTableView::item:selected  {
    color: #1b3774;
    border-color: #cbd8e6; /* same as focused background color */
    border-bottom-color: #7cabf9; /* same as focused border color */
}

/* fix for elements inside the cells */
QTableView > QWidget > QComboBox,
QTableView > QWidget > QAbstractSpinBox,
QTableView > QWidget > QSpinBox,
QTableView > QWidget > QDoubleSpinBox,
QTableView > QWidget > QLineEdit,
QTableView > QWidget > QTextEdit,
QTableView > QWidget > QTimeEdit,
QTableView > QWidget > QDateEdit,
QTableView > QWidget > QDateTimeEdit,
QTableView > QWidget > QComboBox:drop-down,
QTableView > QWidget > QAbstractSpinBox:up-button,
QTableView > QWidget > QSpinBox:up-button,
QTableView > QWidget > QDoubleSpinBox:up-button,
QTableView > QWidget > QTimeEdit:up-button,
QTableView > QWidget > QDateEdit:up-button,
QTableView > QWidget > QDateTimeEdit:up-button,
QTableView > QWidget > QAbstractSpinBox:down-button,
QTableView > QWidget > QSpinBox:down-button,
QTableView > QWidget > QDoubleSpinBox:down-button,
QTableView > QWidget > QTimeEdit:down-button,
QTableView > QWidget > QDateEdit:down-button,
QTableView > QWidget > QDateTimeEdit:down-button,
QTableView > QWidget > Gui--ColorButton {
    border-radius: 0em;
}

QTableView > QWidget > QComboBox,
QTableView > QWidget > QAbstractSpinBox,
QTableView > QWidget > QSpinBox,
QTableView > QWidget > QDoubleSpinBox,
QTableView > QWidget > QLineEdit,
QTableView > QWidget > QTextEdit,
QTableView > QWidget > QTimeEdit,
QTableView > QWidget > QDateEdit,
QTableView > QWidget > QDateTimeEdit {
    color: black;
    background-color: transparent;
    border-color: transparent;
}

QTableView > QWidget > QComboBox:drop-down,
QTableView > QWidget > QAbstractSpinBox:up-button,
QTableView > QWidget > QSpinBox:up-button,
QTableView > QWidget > QDoubleSpinBox:up-button,
QTableView > QWidget > QTimeEdit:up-button,
QTableView > QWidget > QDateEdit:up-button,
QTableView > QWidget > QDateTimeEdit:up-button,
QTableView > QWidget > QAbstractSpinBox:down-button,
QTableView > QWidget > QSpinBox:down-button,
QTableView > QWidget > QDoubleSpinBox:down-button,
QTableView > QWidget > QTimeEdit:down-button,
QTableView > QWidget > QDateEdit:down-button,
QTableView > QWidget > QDateTimeEdit:down-button,
QTableView > QWidget > Gui--ColorButton {
    background-color: rgba(0,0,0,30);
}

QTableView > QWidget > QComboBox:focus,
QTableView > QWidget > QAbstractSpinBox:focus,
QTableView > QWidget > QSpinBox:focus,
QTableView > QWidget > QDoubleSpinBox:focus,
QTableView > QWidget > QLineEdit:focus,
QTableView > QWidget > QTextEdit:focus,
QTableView > QWidget > QTimeEdit:focus,
QTableView > QWidget > QDateEdit:focus,
QTableView > QWidget > QDateTimeEdit:focus {
    color: #1b3774;
    selection-color: white;
    selection-background-color: #5e90fa;
    border-color: #cbd8e6;
    background-color: #cbd8e6;
}

QTableView > QWidget > QComboBox:disabled,
QTableView > QWidget > QAbstractSpinBox:disabled,
QTableView > QWidget > QSpinBox:disabled,
QTableView > QWidget > QDoubleSpinBox:disabled,
QTableView > QWidget > QLineEdit:disabled,
QTableView > QWidget > QTextEdit:disabled,
QTableView > QWidget > QTimeEdit:disabled,
QTableView > QWidget > QDateEdit:disabled,
QTableView > QWidget > QDateTimeEdit:disabled {
    color: rgba(0,0,0,120);
    background-color: transparent;
    border-color: transparent;
}

QTableView > QWidget > QComboBox:read-only,
QTableView > QWidget > QAbstractSpinBox:read-only,
QTableView > QWidget > QSpinBox:read-only,
QTableView > QWidget > QDoubleSpinBox:read-only,
QTableView > QWidget > QLineEdit:read-only,
QTableView > QWidget > QTextEdit:read-only,
QTableView > QWidget > QTimeEdit:read-only,
QTableView > QWidget > QDateEdit:read-only,
QTableView > QWidget > QDateTimeEdit:read-only {
    color: black;
    background-color: transparent;
    border-color: transparent;
}


/*****************************************************************************
 *
 * SELECTORTOOLBAR widget (3rd party plugin)
 *
 *****************************************************************************
 */
QToolBar:horizontal#Selector,
QToolBar:vertical#Selector {
    background-color: rgba(0,0,0,120);
    margin: 0em;
    padding: 0em;
}

QToolBar::handle:top#Selector,
QToolBar::handle:bottom#Selector,
QToolBar::handle:horizontal#Selector {
    alignment: bottom left;
}

QToolBar::handle:left#Selector,
QToolBar::handle:right#Selector,
QToolBar::handle:vertical#Selector {
    width: 100%;
    alignment: center left;
}

QToolBar:top#Selector QToolButton,
QToolBar:bottom#Selector QToolButton,
QToolBar:horizontal#Selector QToolButton {
    alignment: bottom left;
}

QToolBar:left#Selector QToolButton,
QToolBar:right#Selector QToolButton,
QToolBar:vertical#Selector QToolButton {
    alignment: center left;
}

QToolButton[toolbar_orientation="horizontal"] {
    /* nothing, when Horizontal there's no need to add special parameters */
}

QToolButton[toolbar_orientation="vertical"] {
    /* nothing, when Horizontal there's no need to add special parameters */
}

QToolBar#Selector QToolButton {
    border: none;
    margin: 0em;
    padding: 0.2em 0.6em;
    border-radius: 0em;
}

/* Active tab */
QToolBar#Selector QToolButton:checked {
    color: black;
    background-color: #f5f5f5;
}

/* Unactive tabs */
QToolBar#Selector QToolButton:!checked {
    color: rgba(255,255,255,160);
    background-color: transparent;
    margin: 0em;
}

/* Unactive tabs (hover) */
QToolBar#Selector QToolButton:!checked:hover {
    color: rgba(255,255,255,255);
    background-color: rgba(255,255,255,20);
}

/* Unactive tabs (pressed) */
QToolBar#Selector QToolButton:!checked:pressed {
    background-color: rgba(255,255,255,40);
}


/*****************************************************************************
 *
 * TABBAR widget (3rd party plugin)
 *
 *****************************************************************************
 */
QTabWidget#TabBar > QTabBar {
    border-top: 0;
}

QTabWidget#TabBar > QTabBar::tab:top,
QTabWidget#TabBar > QTabBar::tab:bottom {
    min-width: -1;
}

QTabWidget#TabBar > QTabBar::tab:left,
QTabWidget#TabBar > QTabBar::tab:right {
    min-height: -1;
}


/*****************************************************************************
 *
 * EXPERIMENTAL
 *
 *****************************************************************************
 */

/* Fix for preventing elements in different rows to accidentally overlap */
QDialog QGroupBox QFrame {
    margin: 0.2em 0em;
}

*[mandatoryField="true"] { background-color: cyan }

/* Hack to avoid QPushButton text partially hidden under menu-indicator */
QPushButton#NavigationIndicator::menu-indicator {
    image: none;
    width: 0em;
}

/*****************************************************************************
 *
 * SKETCHER
 *
 *****************************************************************************
 */

Gui--StatefulLabel[state="empty_sketch"] {
    color : rgba(0,0,0,127); /* 50% opacity black */
}
Gui--StatefulLabel[state="under_constrained"] {
    color : rgba(0,0,0,255); /* Black */
}
Gui--StatefulLabel[state="conflicting_constraints"] {
    color : rgba(255,0,0,255); /* Red */
}
Gui--StatefulLabel[state="malformed_constraints"] {
    color : rgba(255,0,0,255); /* Red */
}
Gui--StatefulLabel[state="redundant_constraints"] {
    color : rgba(255,69,0,255); /* Orange red */
}
Gui--StatefulLabel[state="partially_redundant_constraints"] {
    color : rgba(65,105,225,255); /* Royal blue */
}
Gui--StatefulLabel[state="solver_failed"] {
    color : rgba(255,0,0,255); /* Red */
    font-weight: bold;
}
Gui--StatefulLabel[state="fully_constrained"] {
    color : rgba(0,255,0,255); /* Green */
    font-weight: bold;
}
Gui--UrlLabel {
    color : rgba(0,0,255,255); /* Blue */
    text-decoration : underline;
}
